#!/usr/bin/env node

/**
 * Module dependencies.
 */

const { app, server } = require('../app');
const debug = require('debug')('football-marketplace-server:server');
const { testConnection } = require('../config/database');

/**
 * Get port from environment and store in Express.
 */

const port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

/**
 * Listen on provided port, on all network interfaces.
 */

// Test database connection before starting server
testConnection().then((connected) => {
  if (!connected) {
    console.error('Failed to connect to database. Server not started.');
    process.exit(1);
  }

  server.listen(port);
  server.on('error', onError);
  server.on('listening', onListening);
}).catch((error) => {
  console.error('Database connection error:', error);
  process.exit(1);
});

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  const port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  
  console.log('🚀 Football Marketplace Server started');
  console.log('📡 Listening on ' + bind);
  console.log('🌍 Environment:', process.env.NODE_ENV || 'development');
  console.log('💾 Database: Connected');
  
  debug('Listening on ' + bind);
}
